version: '3.8'

# This is a compose file for running the system locally,
# and therefore requires running microservices independently.
# There is not .env file for environment variables,
# since this is for testing and development purposes only
# For a complete setup w/ all microservices, execute the docker-compose-deploy.yml

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    restart: 'on-failure'
    volumes:
      - ./.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    network_mode: "host"

  identityStore:
    network_mode: "host"
    image: mongo
    restart: 'on-failure'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db:/data/mongodb/data
  identityService:
    image: identity
    build: ./identityService
    depends_on:
      - identityStore
      - rabbitmq
    network_mode: "host"

  taskStore:
    container_name: taskStore
    image: neo4j:4.0
    volumes:
      - ./data:/data
      - ./plugins:/plugins
    network_mode: "host"
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_query__cache__size=0
  taskService:
    image: task
    build: ./taskService
    depends_on:
      - taskStore
      - rabbitmq
    network_mode: "host"

  activityStore:
    image: cassandra:4.0
    network_mode: "host"
    volumes:
      - ./data:/cassandra/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=citizix
  activityService:
    image: activity
    build: ./activityService
    depends_on:
      - activityStore
      - rabbitmq
    network_mode: "host"

networks:
  host:
    name: host
    external: true
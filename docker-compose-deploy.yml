version: '3'

# This is a compose file for running the system in its entirety,
# For local development, use docker-compose.yml and execute microservices individually

services:
  frontend-deploy:
    image: 'frontend'
    build: 'frontend'
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - identityService
  identityStore:
    image: mongo
    restart: 'no'
    ports:
      - ${IDENTITY_STORE_PORT}:${IDENTITY_STORE_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${IDENTITY_STORE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${IDENTITY_STORE_PASS}
    volumes:
      - db:/var/lib/mongodbprod/data
    network_mode: host
  identityService:
    image: 'identityservice'
    build: 'identityService'
    ports:
      - ${IDENTITY_SERVICE_PORT}:${IDENTITY_SERVICE_PORT}
    depends_on:
      - identityStore
      - broker
    network_mode: host
  taskStore:
    image: postgres:14.1-alpine
    restart: 'no'
    environment:
      - POSTGRES_USER=${TASK_STORE_USER}
      - POSTGRES_PASSWORD=${TASK_STORE_PASS}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresqlprod/data
    network_mode: host
  taskService:
    image: 'taskservice'
    build: 'taskService'
    ports:
      - ${TASK_SERVICE_PORT}:${TASK_SERVICE_PORT}
    depends_on:
      - taskStore
      - broker
    network_mode: host
  #gateway:
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    network_mode: host
  broker-deploy:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - ${BROKER_PORT}:${BROKER_PORT}
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${BROKER_PORT},PLAINTEXT_INTERNAL://broker:${ALT_BROKER_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    network_mode: host
volumes:
  db:
    driver: local
